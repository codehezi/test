1.Servlet的生命周期分为5个阶段：加载、创建、初始化、处理客户请求、卸载。
(1)加载：容器通过类加载器使用servlet类对应的文件加载servlet
(2)创建：通过调用servlet构造函数创建一个servlet对象
(3)初始化：调用init方法初始化
(4)处理客户请求：每当有一个客户请求，容器会创建一个线程来处理客户请求
(5)卸载：调用destroy方法让servlet自己释放其占用的资源
2.混合运算符：
<<=表示左移位赋值
>>=表示带符号右移赋值
>>>=表示无符号右移赋值
注意：没有<<<=没有此类的运算符
3.面向对象：
三个基本元素：封装，继承，多态。
五个基本原则：单一职责原则，开放封闭原则，里氏替换原则，依赖倒置原则，接口隔离原则
4.多态：
1、Java 中单实现通过 implements 关键字，多实现通过 extends 关键字
2、Java 中单继承通过 extends 关键字，没有多继承
3、如果同时出现继承和实现，则必须先继承（extends）再实现（implements）
5重写：
注意一下，重写针对的都是可见的实例方法，对于私有方法和静态方法都不能重写。
6抽象类与接口的区别与联系：
1.抽象类中可以有普通成员变量，接口中没有普通成员变量。
2.抽象类和接口中都可以包含静态成员常量。
3.一个类可以实现多个接口，但只能继承一个抽象类
4.抽象类中可以包含非抽象的普通方法，接口中的方法必须是抽象的，不能有非抽象的普通方法。
7.实现线程间通知和唤醒：
wait()、notify()和notifyAll()是 Object类 中的方法 ；
Condition是在java 1.5中才出现的，它用来替代传统的Object的wait()、notify()实现线程间的协作，相比使用Object的wait()、 notify()，使用Condition1的await()、signal()这种方式实现线程间协作更加安全和高效。